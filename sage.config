<?php namespace Dotink\Sage\Config {

	const PHP_NET = 'http://php.net/';
	const TR_LIB  = 'http://andrewsville.github.com/PHP-Token-Reflection/';

	return [

		//
		// Whether or not we want to sort our output by major types: constants, functions,
		// interfaces, classes, traits
		//

		'sort_by_type' => TRUE,

		//
		// Templat data we can use inside templates
		//

		'template_data' => [

			//
			// Root directory where we store examples
			//

			'example_root' => implode(DIRECTORY_SEPARATOR, [__DIR__, 'docs', 'examples']),
		],

		//
		// This list allows you to provide external doc links.  You could also use this to
		// override documents which are autolinked internally.
		//

		'external_docs' => [

			//
			// PHP.NET standard types
			//

			'string'  => PHP_NET . 'language.types.string',
			'array'   => PHP_NET . 'language.types.array',
			'integer' => PHP_NET . 'language.types.integer',
			'int'     => PHP_NET . 'language.types.integer',
			'boo'     => PHP_NET . 'language.types.boolean',
			'boolean' => PHP_NET . 'language.types.boolean',
			'float'   => PHP_NET . 'language.types.float',
			'NULL'    => PHP_NET . 'language.types.null',
			'void'    => PHP_NET . 'language.types.null',
			'mixed'   => PHP_NET . 'language.pseudo-types',

			//
			// PHP.NET Standard Library
			//

			'ArrayIterator' => PHP_NET . 'class.arrayiterator',
			'Exception'     => PHP_NET . 'class.exception',
			'DOMDocument'   => PHP_NET . 'class.domdocument',
			'DOMElement'    => PHP_NET . 'class.domelement',
			'DOMNode'       => PHP_NET . 'class.domnode',
			'DOMNodeList'   => PHP_NET . 'class.domnodelist',
			'DOMXPath'      => PHP_NET . 'class.domxpath',
			'Closure'       => PHP_NET . 'class.closure',

			//
			// TokenReflection (used by sage)
			//

			'TokenReflection\IReflection' => TR_LIB . 'class-TokenReflection.IReflection.html',

		],

		//
		// A list of custom token parsers
		//

		'token_parsers' => [

		]

	];

}
